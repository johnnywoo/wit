@whitespace manual

# root token
: [line {"\n" line}]

line: indent [comment | statement-line | html-line]


###
## STATEMENTS
#

statement-line: statement-body [comment]
# one-line comment is //
comment: /\s*\/\/[^\r\n]*/
indent: /\s*/

statement-body: statement [{">" statement} ">" (statement | html-line)]
statement: tag | command-statement

tag: tag-name {sugar-class | sugar-id | sugar-name} {tag-arg}

sugar-class: "." value
sugar-id:    "#" value
sugar-name:  "&" value

command-statement: command-statement-name {arg}

tag-arg: required-inline-whitespace value-place ["=" value-place]
arg: required-inline-whitespace value-place

html-line: {variable | expression | html}

# do we want to parse the html too? we might need this for mixing of nesting
html: /[^${]+/


###
## EXPRESSIONS
#

expression: "{" (command-expression | value-expression) {pipeline} "}"
command-expression: command-name {arg}
pipeline: "|" command-expression

value-place: word | value
value: literal | variable | expression

variable: var-name {"." array-key}

value-expression: (value | "(" value-expression ")" | operation)
operation: ternary | math
ternary: value-expression ["?" value-expression] ":" value-expression
math: cmp {bool_op cmp}
cmp: sum {cmp_op sum}
sum: mul {sum_op mul}
mul: unary {mul_op unary}
unary: [unary_op] value-expression

bool_op: "||" | "&&"
cmp_op: ">" | "<" | ">=" | "<=" | "==" | "!="
mul_op: "*" | "/" | "%"
sum_op: "+" | "-"
unary_op: "+" | "-"

literal: number | string
string: single-quoted | double-quoted

single-quoted: "'" {single-quoted-escape | single-quoted-body} "'"
# invalid escape chars are left as is
single-quoted-body: /([^'\\]|\\[^'\\])+/
single-quoted-escape: /\\['\\]/

double-quoted: "'" {double-quoted-escape | double-quoted-body | expression | variable} "'"
double-quoted-body: /([^"\\nrt{$]|\\[^"\\nrt{$])+/
double-quoted-escape: /\\["\\nrt{$]/


###
## TOKENS
#

required-inline-whitespace: /[ \t]+/
# optional inline whitespace
inline-whitespace: /[ \t]+/
# optional whitespace in expressions
ws: /\s*/

tag-name: /[a-z][a-z0-9_-]*+/
command-statement-name: /[A-Z][A-Z0-9_-]*+/
command-name: /[a-z][a-z0-9_-]*/i

var-name: /\$[a-z_][a-z0-9_]*/i
array-key: /[a-z0-9_]+/i

number: /[+-]?[0-9]+)(\.[0-9]+)?/

unquoted: /[^'"=<>!\s|?:]+/
